{"ast":null,"code":"import { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\nconst DEFAULT_CONFIG = {\n  connector: () => new Subject()\n};\nexport function connect(selector, config = DEFAULT_CONFIG) {\n  const {\n    connector\n  } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}","map":{"version":3,"sources":["D:/HTML/_Angular/projektfeladat/4/projektfeladat - webshop/node_modules/rxjs/dist/esm/internal/operators/connect.js"],"names":["Subject","innerFrom","operate","fromSubscribable","DEFAULT_CONFIG","connector","connect","selector","config","source","subscriber","subject","subscribe","add"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,SAAS,EAAE,MAAM,IAAIL,OAAJ;AADE,CAAvB;AAGA,OAAO,SAASM,OAAT,CAAiBC,QAAjB,EAA2BC,MAAM,GAAGJ,cAApC,EAAoD;AACvD,QAAM;AAAEC,IAAAA;AAAF,MAAgBG,MAAtB;AACA,SAAON,OAAO,CAAC,CAACO,MAAD,EAASC,UAAT,KAAwB;AACnC,UAAMC,OAAO,GAAGN,SAAS,EAAzB;AACAJ,IAAAA,SAAS,CAACM,QAAQ,CAACJ,gBAAgB,CAACQ,OAAD,CAAjB,CAAT,CAAT,CAA+CC,SAA/C,CAAyDF,UAAzD;AACAA,IAAAA,UAAU,CAACG,GAAX,CAAeJ,MAAM,CAACG,SAAP,CAAiBD,OAAjB,CAAf;AACH,GAJa,CAAd;AAKH","sourcesContent":["import { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\nconst DEFAULT_CONFIG = {\n    connector: () => new Subject(),\n};\nexport function connect(selector, config = DEFAULT_CONFIG) {\n    const { connector } = config;\n    return operate((source, subscriber) => {\n        const subject = connector();\n        innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n        subscriber.add(source.subscribe(subject));\n    });\n}\n"]},"metadata":{},"sourceType":"module"}